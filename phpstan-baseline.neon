parameters:
	ignoreErrors:
		-
			message: "#^Calling PHPStan\\\\Reflection\\\\Php\\\\PhpFunctionReflection\\:\\:getFileName\\(\\) is not covered by backward compatibility promise\\. The method might change in a minor PHPStan version\\.$#"
			count: 1
			path: src/Rules/NoGlobalLaravelFunctionRule.php

		-
			message: "#^Calling PHPStan\\\\Reflection\\\\Php\\\\PhpFunctionReflection\\:\\:getName\\(\\) is not covered by backward compatibility promise\\. The method might change in a minor PHPStan version\\.$#"
			count: 1
			path: src/Rules/NoGlobalLaravelFunctionRule.php

		-
			message: "#^Calling PHPStan\\\\Reflection\\\\Php\\\\PhpParameterFromParserNodeReflection\\:\\:getType\\(\\) is not covered by backward compatibility promise\\. The method might change in a minor PHPStan version\\.$#"
			count: 3
			path: src/Rules/NoLocalQueryScopeRule.php

		-
			message: "#^Calling PHPStan\\\\Reflection\\\\Php\\\\PhpParameterFromParserNodeReflection\\:\\:getType\\(\\) is not covered by backward compatibility promise\\. The method might change in a minor PHPStan version\\.$#"
			count: 3
			path: src/Rules/ScopeShouldReturnQueryBuilderRule.php

		-
			message: "#^Creating new PHPStan\\\\File\\\\FileHelper is not covered by backward compatibility promise\\. The class might change in a minor PHPStan version\\.$#"
			count: 1
			path: tests/Rules/ListenerShouldHaveVoidReturnTypeRuleTest.php

		-
			message: "#^Parameter \\#2 \\$listenerPaths of class Vural\\\\LarastanStrictRules\\\\Rules\\\\ListenerShouldHaveVoidReturnTypeRule constructor expects array\\<string\\>, mixed given\\.$#"
			count: 1
			path: tests/Rules/ListenerShouldHaveVoidReturnTypeRuleTest.php

